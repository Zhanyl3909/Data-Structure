#include <stdio.h>
#include <stdlib.h>

#define N 5
int S1[N], S2[N];
int top1=-1, top2=-1;
int count = 0;

//push funciton for Stack 1
void push1(int x) {
    if(top1 == N-1) {
        printf("Error: Full!");
    } else {
        top1++;
        S1[top1] = x;
    }
}

//push function for Stack 2 (we use this stack as a temporary)
void push2(int x) {
    if(top2 == N-1) {
        printf("Error: Full!");
    } else {
        top2++;
        S2[top2] = x;
    }
}

//pop function for S1
int pop1() {
    return S1[top1--];
}

//pop function for S2
int pop2() {
    return S2[top2--];
}

//Enequeue funciton 
void Enequeue(int x) {
    push1(x);
    count++;
}

//Dequeue fucntion
void Dequeue() {
    int i, b, a;
    
    if(top1==-1 && top2==-1) {
        printf("Error! Empty");
    } else {
        for(i=0; i<count; i++) {
            a = pop1();
            push2(a);
        }
        b = pop2();
        printf("%d ",b);
        count--;
        
        for(i=0; i<count; i++) {
            a = pop2();
            push1(a);
        }
    }
}

//Display function 
void Display() {
    for(int i=0; i<=top1; i++) {
        printf("%d ", S1[i]);
    }
}


int main() {
    Enequeue(5);
    Enequeue(-1);
    Enequeue(2);
    Dequeue();
    Enequeue(7);
    Display();
    
    return 0;
}
